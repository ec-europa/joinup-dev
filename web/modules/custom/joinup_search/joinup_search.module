<?php

/**
 * @file
 * Provides functionality for the Joinup search module.
 */

use Drupal\Core\Access\AccessResult;
use Drupal\Core\Field\FieldDefinitionInterface;
use Drupal\Core\Field\FieldItemListInterface;
use Drupal\Core\Session\AccountInterface;
use Drupal\search_api\IndexInterface;
use Drupal\search_api\Query\QueryInterface;

/**
 * Implements hook_entity_field_access().
 *
 * Grant access to fields of type search only to moderators.
 */
function joinup_search_entity_field_access($operation, FieldDefinitionInterface $field_definition, AccountInterface $account, FieldItemListInterface $items = NULL) {
  if ($operation === 'edit' && $field_definition->getType() === 'search_api_field' && !$account->hasPermission('administer search fields')) {
    return AccessResult::forbidden()->addCacheContexts(['user.permissions']);
  }

  return AccessResult::neutral();
}

/**
 * Implements hook_search_api_query_alter().
 *
 * Sets a default search ordering for the content displayed in the collections'
 * and solutions' overview page as well as the custom pages.
 */
function joinup_search_search_api_query_alter(QueryInterface &$query) {
  $search_ids = [
    'rdf_entity.field_collection_content',
    'rdf_entity.field_is_content',
    'node.field_cp_content_listing',
  ];

  if (!in_array($query->getSearchId(), $search_ids)) {
    return;
  }

  $query->sort('entity_created', 'DESC');
}

/**
 * Implements hook_search_api_solr_documents_alter().
 *
 * By default, solr server configuration has a property named sortMissingLast
 * set to true for all fields defined. This means that two different entity
 * types, one with a property set to false and one without the property, will
 * result in having the one without the property placed last.
 *
 * Set the "sticky" and "site_pinned" properties to all documents that are
 * missing them. The properties are prefixed with "bs_" because "b" stands for
 * boolean and "s" for single value, as they are used for sorting.
 */
function joinup_search_search_api_solr_documents_alter(&$documents, IndexInterface $index, array $items) {
  /** @var \Solarium\QueryType\Update\Query\Document\Document[] $documents */
  foreach ($documents as $document) {
    if (empty($document->getFields()['bs_sticky'])) {
      $document->setField('bs_sticky', FALSE);
    }
    if (!isset($document->getFields()['bs_site_pinned'])) {
      $document->setField('bs_site_pinned', FALSE);
    }
  }
}

/**
 * Implements hook_search_api_solr_field_mapping_alter().
 *
 * Single value fields need to be used for sorting.
 */
function joinup_search_search_api_solr_field_mapping_alter(IndexInterface $index, array &$fields) {
  $mappings = [
    'entity_created' => 'ds_entity_created',
    'site_pinned' => 'bs_site_pinned',
  ];

  foreach ($mappings as $alias => $solr_field) {
    if (isset($fields[$alias])) {
      $fields[$alias] = $solr_field;
    }
  }
}
