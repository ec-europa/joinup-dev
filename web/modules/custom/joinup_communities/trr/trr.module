<?php

/**
 * @file
 * The TRR module.
 */

use Drupal\Core\Entity\EntityTypeInterface;
use Drupal\Core\Form\FormStateInterface;

/**
 * Implements hook_entity_bundle_field_info_alter().
 */
function trr_entity_bundle_field_info_alter(&$fields, EntityTypeInterface $entity_type, $bundle) {
  if ($entity_type->id() === 'rdf_entity' && $bundle === 'solution') {
    $required_taxonomy_fields = [
      'field_is_actor',
      'field_is_business_process',
      'field_is_product_type',
      'field_is_standardization_level',
      'field_is_test_resource_type',
    ];
    foreach ($required_taxonomy_fields as $field) {
      if (isset($fields[$field])) {
        $fields[$field]->addConstraint('RequiredIfOtherFieldHasValue', [
          'field' => 'field_is_solution_type',
          'values' => [
            'http://data.europa.eu/dr8/TestComponent',
            'http://data.europa.eu/dr8/TestService',
            'http://data.europa.eu/dr8/TestScenario',
          ],
        ]);
      }
    }

    $fields['field_is_test_resource_type']->addConstraint('SolutionTestResourceType');
  }
}

/**
 * Implements hook_form_FORM_ID_alter().
 */
function trr_form_rdf_entity_solution_edit_form_alter(&$form, FormStateInterface $form_state) {
  // Delegate the edit form alteration to the same alter hook
  // as the create form.
  trr_form_rdf_entity_solution_form_alter($form, $form_state);
}

/**
 * Implements hook_form_FORM_ID_alter().
 */
function trr_form_rdf_entity_solution_form_alter(&$form, FormStateInterface $form_state) {
  $form['#attached']['library'][] = 'trr/solution-trr';
}
