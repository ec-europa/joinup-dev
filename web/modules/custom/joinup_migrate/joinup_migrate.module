<?php

/**
 * @file
 * Contains joinup_migrate.module.
 */

use Drupal\Core\Database\Query\AlterableInterface;

/**
 * Implements hook_query_TAG_alter().
 *
 * Alters queries tagged with 'uri' by LEFT JOINing to {content_field_id_uri}
 * table and adding the uri field to the query as 'uri'.
 */
function joinup_migrate_query_uri_alter(AlterableInterface $query) {
  /** @var \Drupal\Core\Database\Query\SelectInterface $query */
  $alias = $query->getMetaData('alias');
  $alias['uri'] = $query->leftJoin('content_field_id_uri', 'uri', "{$alias['node']}.vid = %alias.vid");
  // Save back aliases.
  $query->addMetaData('alias', $alias);
  $query->addExpression("TRIM({$alias['uri']}.field_id_uri_value)", 'uri');
}

/**
 * Implements hook_query_TAG_alter().
 *
 * Alters queries tagged with 'user_migrate' by INNER JOINing to {userpoints}
 * table and adding user filters.
 */
function joinup_migrate_query_user_migrate_alter(AlterableInterface $query) {
  /** @var \Drupal\Core\Database\Query\SelectInterface $query */
  $found = $users_table = FALSE;
  foreach ($query->getTables() as $users_table => $table) {
    if ($table['table'] === 'users') {
      $found = TRUE;
      break;
    }
  }

  if (!$found) {
    throw new \LogicException("Table {users} not part of the query.");
  }

  $userpoints_table = $query->join('userpoints', 'userpoints', "$users_table.uid = %alias.uid");

  $query
    // Exclude anonymous.
    ->condition("$users_table.uid", 0, '>')
    // Only active users.
    ->condition("$users_table.status", 1)
    // Only with kudos >= 10.
    ->condition("$userpoints_table.points", 10, '>=');
}
