<?php

/**
 * @file
 * Contains joinup_federation_test.module.
 */

/**
 * Implements hook_rdf_load_bundle_alter().
 *
 * Resolves the case when two bundles are sharing the same RDF type URI.
 */
function joinup_federation_test_rdf_load_bundle_alter($entity_values, &$bundles) {
  if (count($bundles) > 1 && in_array('solution', $bundles)) {
    if (isset($entity_values['http://example.com/predicate/solution/is_solution'])) {
      $bundles = ['solution'];
    }
    else {
      $bundles = ['version'];
    }
  }
}

/**
 * Implements hook_ENTITY_TYPE_storage_load().
 *
 * Mock the behavior of collection field from solution for the testing purpose.
 */
function joinup_federation_test_rdf_entity_storage_load(array &$entities) {
  /** @var \Drupal\rdf_entity\Entity\Query\Sparql\SparqlQueryInterface $query */
  $storage = \Drupal::entityTypeManager()->getStorage('rdf_entity');
  /** @var \Drupal\rdf_entity\RdfInterface $solution */
  foreach ($entities as $solution) {
    if ($solution->bundle() !== 'solution') {
      continue;
    }
    $ids = $storage->getQuery()
      ->condition('rid', 'collection')
      ->condition('field_ar_affiliates', $solution->id())
      ->execute();
    if ($ids) {
      $id = array_shift($ids);
      $solution->collection = (object) ['target_id' => $id];
    }
  }
}
