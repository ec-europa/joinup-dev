<?php

/**
 * @file
 * Contains joinup_federation_test.module.
 */

use Drupal\Core\Entity\EntityTypeInterface;
use Drupal\Core\Field\BaseFieldDefinition;
use Drupal\solution\SolutionAffiliationFieldItemList;

/**
 * Implements hook_rdf_load_bundle_alter().
 *
 * Resolves the case when two bundles are sharing the same RDF type URI.
 */
function joinup_federation_test_rdf_load_bundle_alter($entity_values, &$bundles) {
  if (count($bundles) > 1 && in_array('solution', $bundles)) {
    if (isset($entity_values['http://example.com/predicate/solution/is_solution'])) {
      $bundles = ['solution'];
    }
    else {
      $bundles = ['version'];
    }
  }
}

/**
 * Implements hook_entity_bundle_field_info_alter().
 */
function joinup_federation_test_entity_bundle_field_info_alter(&$fields, EntityTypeInterface $entity_type, $bundle) {
  if ($entity_type->id() !== 'rdf_entity' || $bundle !== 'solution') {
    return;
  }

  /** @var \Drupal\Core\Entity\EntityFieldManagerInterface $entity_field_manager */
  $entity_field_manager = \Drupal::service('entity_field.manager');
  $definitions = $entity_field_manager->getFieldStorageDefinitions('rdf_entity');
  // Only act for tests that are providing the 'field_ar_affiliates' field.
  if (!isset($definitions['field_ar_affiliates'])) {
    return;
  }

  // Computed field, that represents the collections a solution is part of.
  $fields['collection'] = BaseFieldDefinition::create('entity_reference')
    ->setLabel(t('Collections'))
    ->setName('collection')
    ->setTargetEntityTypeId('rdf_entity')
    ->setTargetBundle('solution')
    ->setSetting('target_type', 'rdf_entity')
    ->setComputed(TRUE)
    ->setClass(SolutionAffiliationFieldItemList::class);
}
