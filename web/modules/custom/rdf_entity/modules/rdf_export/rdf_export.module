<?php

/**
 * @file
 * Export entities using the rdf storage in RDF.
 */

declare(strict_types = 1);

use Drupal\Core\Entity\EntityInterface;
use Drupal\sparql_entity_storage\SparqlEntityStorage;

/**
 * Implements hook_entity_type_alter().
 */
function rdf_export_entity_type_alter(array &$entity_types) {
  // Guard condition against infinite recursion.
  static $recurse = FALSE;
  if ($recurse) {
    return;
  }
  foreach ($entity_types as $entity_type_id => $entity_type) {
    if ($entity_type->hasViewBuilderClass() && $entity_type->hasLinkTemplate('canonical')) {
      $recurse = TRUE;
      $storage = \Drupal::service('entity_type.manager')->getStorage($entity_type_id);
      $recurse = FALSE;
      if ($storage instanceof SparqlEntityStorage) {
        $entity_type->setLinkTemplate('rdf-export', "/rdf-export/$entity_type_id/{{$entity_type_id}}");
      }
    }
  }
}

/**
 * Implements hook_entity_operation().
 */
function rdf_export_entity_operation(EntityInterface $entity) {
  $operations = [];
  if ($entity->hasLinkTemplate('rdf-export')) {
    $operations['export'] = [
      'title' => t('Export RDF'),
      'weight' => 100,
      'url' => $entity->toUrl('rdf-export'),
    ];
  }
  return $operations;
}
