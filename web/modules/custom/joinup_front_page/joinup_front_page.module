<?php

/**
 * @file
 * Hook implementations for the Joinup front page module.
 */

declare(strict_types = 1);

use Drupal\Core\Entity\Display\EntityViewDisplayInterface;
use Drupal\Core\Entity\EntityInterface;
use Drupal\Core\Entity\EntityTypeInterface;
use Drupal\Core\Field\BaseFieldDefinition;
use Drupal\Core\Form\FormStateInterface;
use Drupal\joinup_front_page\FrontPagePinnedFieldItemList;
use Drupal\menu_link_content\MenuLinkContentInterface;

/**
 * Implements hook_entity_base_field_info().
 */
function joinup_front_page_entity_base_field_info(EntityTypeInterface $entity_type) {
  if ($entity_type->id() === 'rdf_entity' || $entity_type->id() === 'node') {
    $fields = [];
    $fields['front_page_pinned'] = BaseFieldDefinition::create('integer')
      ->setLabel(t('Pinned to the front page'))
      ->setComputed(TRUE)
      ->setClass(FrontPagePinnedFieldItemList::class);
    return $fields;
  }
}

/**
 * Implements hook_form_FORM_ID_alter().
 */
function joinup_front_page_form_menu_edit_form_alter(&$form, FormStateInterface $form_state, $form_id): void {
  /** @var \Drupal\system\Entity\Menu $menu */
  $menu = $form_state->getFormObject()->getEntity();
  if ($menu->id() !== 'front-page') {
    return;
  }

  $form['#title'] = t('Front page pinned items');
  $form['links']['links']['#empty'] = t('There are no pinned items. Start by pinning an entity to the front page.');

  foreach ($form['links']['links'] as &$link_data) {
    if (is_array($link_data) && isset($link_data['#item'])) {
      // The user does not have access to the edit form anyway.
      unset($link_data['operations']['#links']['edit']);

      // Disallow nesting for all entries.
      $link_data['#attributes']['class'][] = 'tabledrag-root';
      $link_data['#attributes']['class'][] = 'tabledrag-leaf';
    }
  }
}

/**
 * Implements hook_entity_view_alter().
 */
function joinup_front_page_entity_view_alter(array &$build, EntityInterface $entity, EntityViewDisplayInterface $display): void {
  if (in_array($entity->getEntityTypeId(), ['node', 'rdf_entity'])) {
    $front_page_helper = \Drupal::service('joinup_front_page.front_page_helper');
    $menu_item = $front_page_helper->getFrontPageMenuItem($entity);

    // Add the "entity" contextual links group.
    $build['#contextual_links']['entity'] = [
      'route_parameters' => [
        'entity_type' => $entity->getEntityTypeId(),
        'entity' => $entity->id(),
      ],
      'metadata' => ['changed' => $entity->getChangedTime()],
    ];

    $build['#contextual_links']['entity']['metadata']['is_pinned_to_front_page'] = (int) !empty($menu_item);
  }
}

/**
 * Implements hook_ENTITY_TYPE_update().
 */
function joinup_front_page_menu_link_content_update(MenuLinkContentInterface $entity) {
  if ($entity->getMenuName() !== 'front-page') {
    return;
  }

  /** @var \Drupal\joinup_front_page\FrontPageMenuHelperInterface $front_page_helper */
  $front_page_helper = \Drupal::service('joinup_front_page.front_page_helper');
  $entities = $front_page_helper->loadEntitiesFromMenuItems([$entity]);
  $entity = reset($entities);
  $front_page_helper->updateSearchApiEntry($entity);
}
