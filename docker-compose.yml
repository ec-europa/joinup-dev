# Any value can be overridden in docker-compose.override.yml, a file that is not
# under VCS control. See docker-compose.override.yml.dist for more details.

# CLEAN vs. CLONE install
# Docker compose knows to fire up the containers with databases having data
# imported from the production dumps/snapshots. Read the documentation for the
# DOCKER_RESTORE_PRODUCTION environment variable from .env.dist.

# Accessing services from the host machine:
# - http://localhost:8080 - Site's homepage.
# - mysql://root@localhost:3307/joinup - MySQL connection.
# - http://localhost:8891/sparql - SPARQL endpoint.
# - http://localhost:8984/solr - Solr endpoint.
# - http://localhost:8026 - MailHog UI.
# - localhost:5900 - VNC server. Used to visualise the Selenium browser. Use
#   'secret' as password.
# Note that some service standard ports were changed in order to avoid
# collision with potential host machine services.

version: '3'
services:
  web:
    image: fpfis/httpd-php-dev:7.1
    working_dir: /var/www/html
    ports:
      - '8080:8080'
    # macOS users should override 'volumes:' in docker-compose.override.yml.
    # See docker-compose.override.yml.dist.
    volumes:
      - ${PWD}:/var/www/html
    env_file:
      - .env.dist
    environment:
      DOCUMENT_ROOT: "/var/www/html/web"
      SMTP_SERVER: mail
      SMTP_PORT: 1025
      SMTP_FROM: contact@example.com
      # Environment variables without a value will receive the values from the
      # host machine, if they are set. Sensitive information such as
      # user credentials should be placed in .env file.
      # See https://docs.docker.com/compose/environment-variables/#pass-environment-variables-to-containers
      DRUPAL_HASH_SALT:
      ASDA_URL:
      ASDA_USER:
      ASDA_PASSWORD:
    depends_on:
      - mysql
      - virtuoso
      - solr
      - redis
      - mail
      - selenium

  mysql:
    image: mysql:5.7
    ports:
      # Avoid port collision with a potential host machine instance of MySQL.
      - '3307:3306'
    # macOS users should override 'volumes:' in docker-compose.override.yml.
    # See docker-compose.override.yml.dist.
    volumes:
      - ./resources/docker/mysql/config:/etc/mysql/conf.d
      # MySQL dump.
      - ./db/mysql/dump/mysql.sql:/db/mysql/dump/mysql.sql
      # Contains a script to run when waking up.
      - ./scripts/docker/mysql:/docker-entrypoint-initdb.d
    env_file:
      - .env.dist
    environment:
      MYSQL_ALLOW_EMPTY_PASSWORD: 'yes'
      MYSQL_DATABASE: 'joinup'
      DOCKER_RESTORE_PRODUCTION:

  virtuoso:
    image: tenforce/virtuoso
    ports:
      # Avoid port collision with a potential host machine instance of Virtuoso.
      - '8891:8890'
    # macOS users should override 'volumes:' in docker-compose.override.yml.
    # See docker-compose.override.yml.dist.
    volumes:
      - ./db/virtuoso/snapshot:/data/backups
    environment:
      SPARQL_UPDATE: 'true'
      # Virtuoso .ini overrides. Pattern: VIRT_$SECTION_$KEY=$VALUE
      # See https://hub.docker.com/r/tenforce/virtuoso
      VIRT_Parameters_O_DIRECT: 1
      VIRT_Parameters_ThreadCleanupInterval: 1
      VIRT_Parameters_NumberOfBuffers: 340000
      VIRT_Parameters_MaxDirtyBuffers: 250000
      VIRT_Replication_ServerEnable: 0
      VIRT_SPARQL_ResultSetMaxRows: 1000000
      DOCKER_RESTORE_PRODUCTION:
    command:
      - bash
      - '-c'
      - 'if [ "$${DOCKER_RESTORE_PRODUCTION}" = "yes" ];
         then
           BACKUP_PREFIX="JOINUP_FULL_DUMP_" bash -ex /virtuoso.sh ;
         else
           bash -ex /virtuoso.sh;
         fi'

  solr:
    image: solr:6
    ports:
      # Avoid port collision with a potential host machine instance of Solr.
      - '8984:8983'
    # macOS users should override 'volumes:' in docker-compose.override.yml.
    # See docker-compose.override.yml.dist.
    volumes:
      - ./db/solr:/solr/snapshot
      - ./web/modules/contrib/search_api_solr/solr-conf/6.x:/solr/conf
      - ./scripts/solr/restore_solr.sh:/opt/solr/bin/restore_solr.sh
    entrypoint:
      - docker-entrypoint.sh
      - bash
      - '-c'
      - 'mkdir -p /opt/docker-solr/drupal/conf ;
         cp -r /solr/conf/* /opt/docker-solr/drupal/conf/ ;
         sed -i "/solr.install.dir=/c\solr.install.dir=/opt/solr" /opt/docker-solr/drupal/conf/solrcore.properties ;
         precreate-core drupal_published /opt/docker-solr/drupal ;
         precreate-core drupal_unpublished /opt/docker-solr/drupal ;
         ( test "$${DOCKER_RESTORE_PRODUCTION}" = "yes" &&
           (
             /opt/solr/bin/solr start ;
             sleep 5 ;
             /usr/bin/curl -sS "http://localhost:8983/solr/drupal_published/replication?command=restore&name=published&location=/solr/snapshot&wt=xml" ;
             ( until [[ "`/usr/bin/curl -sS ''http://localhost:8983/solr/drupal_published/replication?command=restorestatus''`" =~ \>success\< ]] ; do sleep 1 ; done ) ;
             /usr/bin/curl -sS "http://localhost:8983/solr/drupal_unpublished/replication?command=restore&name=unpublished&location=/solr/snapshot&wt=xml" ;
             ( until [[ "`/usr/bin/curl -sS ''http://localhost:8983/solr/drupal_unpublished/replication?command=restorestatus''`" =~ \>success\< ]] ; do sleep 1 ; done ) ;
             /opt/solr/bin/solr stop
           )
         ) ;
         exec solr -f'
    environment:
      DOCKER_RESTORE_PRODUCTION:

  redis:
    image: redis
    ports:
      # Avoid port collision with a potential host machine instance of Redis.
      - '6380:6379'

  mail:
    image: mailhog/mailhog
    ports:
      # Avoid port collision with a potential host machine instance of Mailhog.
      - '1026:1025'
      - '8026:8025'

  # Spawn a Selenium server, including also a VNC server on localhost:5900 (the
  # password is "secret")
  selenium:
    image: selenium/standalone-chrome-debug
    environment:
      - DISPLAY=:99
      - SE_OPTS=-debug
    ports:
      - '5900:5900'
    expose:
      - '4444'
