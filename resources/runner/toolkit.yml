# Toolkit overrides.

toolkit:
  project_id: joinup
  tmp_folder: ${joinup.dir}/tmp
  clone:
    dumpfile: ${mysql.dump_dir}/mysql.sql

  build:
    dist:
      commands:
        # Recursively remove .git directories.
        - task: exec
          command: find ${toolkit.build.dist.root} -type d -name .git -prune -exec rm -rf {} \;
        # More cleanup.
        - task: exec
          command: rm
          arguments:
            - ${toolkit.build.dist.root}/.editorconfig
            - ${toolkit.build.dist.root}/.gitattributes
            - ${toolkit.build.dist.root}/.gitignore
            # Drupal Finder, and consequently Drush, are still needing
            # composer.json to locate the root dir. Remove only composer.lock.
            - ${toolkit.build.dist.root}/composer.lock

commands:

  # Overrides the toolkit:build-dev command.
  toolkit:build-dev:
    - task: copy
      from: ${joinup.site_dir}/sites/default/default.services.yml
      to: ${joinup.site_dir}/sites/default/services.yml
    - task: run
      command: testing:phpcs-setup
    - task: run
      command: testing:phpcs-git-hook
    - task: process
      source: ${joinup.dir}/behat.yml.dist
      destination: ${joinup.dir}/behat.yml
    - task: run
      command: joinup:compile-scss
    - task: mkdir
      dir: ${joinup.files_private_dir}
    - task: mkdir
      dir: ${env.DRUPAL_FILE_TEMP_PATH}
    - task: exec
      command: test "$(git tag)" = "" || git describe --tags | tr -d '\n' > ${joinup.site_dir}/VERSION.txt

  # Overrides toolkit:install-clean.
  toolkit:install-clean:
    - task: run
      command: sparql:empty
    - task: run
      command: solr:empty
    - task: run
      command: redis:flush-all
    - task: run
      command: drupal:settings
      arguments:
        - install
    - task: run
      command: config-readonly:disable
    - task: run
      command: drupal:site-install
    - task: run
      command: dev:import-sparql-fixtures
    # TODO: Remove this in ISAICP-5271. Newer versions of Search API module are
    # storing the site hash into a state variable, rather than a config.
    # See https://citnet.tech.ec.europa.eu/CITnet/jira/browse/ISAICP-5271.
    - task: exec
      command: ${drush.bin}
      arguments:
        - php:eval
        - \Drupal\search_api_solr\Utility\Utility::getSiteHash();
      options:
        root: ${joinup.site_dir}
        yes: null
    - task: run
      command: dev:install-modules
    - task: run
      command: drupal:settings
      arguments:
        - site-clean
    - task: run
      command: dev:demo-users
    - task: exec
      command: ${drush.bin}
      arguments:
        - cas-mock-server:start
      options:
        yes: null
        root: ${joinup.site_dir}
    - task: exec
      command: ${drush.bin}
      arguments:
        - php:eval
        - if (node_access_needs_rebuild()) { node_access_rebuild(); }
    - task: run
      command: config-readonly:enable

  # Overrides the toolkit:test-phpcs command.
  toolkit:test-phpcs:
    # Handle a potential case where the repo has been shallow cloned. Typically,
    # this happens in GitLab pipelines, where the repos are shallow cloned for
    # performance reasons. A shallow clone repository prevents us to get the
    # latest Git tag as no tags are available. But we require this info during
    # the coding standards check.
    # See \Joinup\CodingStandards\Sniffs\NamingConventions\ValidUpdateNameSniff
    - task: exec
      command: test "$(git rev-parse --is-shallow-repository)" = "false" || git fetch --unshallow
    - task: run
      command: testing:phpcs-setup
    - task: exec
      command: ${phpcs.file.bin}
    #- task: run
    #  command: testing:check-deprecated-code
    #- task: run
    #  command: testing:check-deprecated-code-contrib

  # Lints YAML files using ESLint.
  toolkit:lint-yaml:
    - task: exec
      command: ${joinup.dir}/node_modules/.bin/eslint --ext .yml .

  # Fixes YAML files using ESLint.
  toolkit:fix-yaml:
    - task: exec
      command: ${joinup.dir}/node_modules/.bin/eslint --ext .yml --fix .
