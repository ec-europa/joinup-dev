# Development configs and commands

phpstan:
  bin: ${joinup.dir}/vendor/bin/phpstan

dev:
  modules:
    - admin_toolbar
    - cas_mock_server
    - config_devel
    - config_update
    - dblog
    - devel
    - field_ui
    - filecache
    - joinup_cas_mock_server
    - page_manager_ui
    - views_ui

commands:

  # Downloads all backends backups.
  dev:download-databases:
    - { task: "run", command: "mysql:download-dump" }
    - { task: "run", command: "virtuoso:download-snapshot" }
    - { task: "run", command: "solr:download-snapshot" }

  # Restores all backends from backup.
  dev:restore-databases:
    - task: run
      command: solr:restore
    - task: run
      command: virtuoso:restore
    - task: run
      command: drupal:settings
      arguments:
        - site-clone
    - task: run
      command: toolkit:install-dump

  # Rebuilds the dev environment by restoring backups and applying updates.
  dev:rebuild-environment:
    - task: run
      command: solr:restore
    - task: run
      command: virtuoso:restore
    - task: run
      command: redis:flush-all
    - task: run
      command: drupal:settings
      arguments:
        - site-clone
    - task: run
      command: toolkit:install-clone
    - task: exec
      command: ${drush.bin}
      arguments:
        - php:eval
        - if (node_access_needs_rebuild()) { node_access_rebuild(); }

  dev:install-modules:
    - task: run
      command: config-readonly:disable
    - task: run
      command: drush:module-install
      arguments: ${dev.modules}
    - task: run
      command: config-readonly:enable

  dev:demo-users:
    - task: run
      command: config-readonly:disable
    # Make sure CAS mock server module is installed.
    - task: run
      command: drush:module-install
      arguments: cas_mock_server
    - task: exec
      command: ${drush.bin}
      arguments:
        - user:create
        - administrator
      options:
        mail: administrator@example.com
        password: administrator
        yes: null
        root: ${joinup.site_dir}
    - task: exec
      command: ${drush.bin}
      arguments:
        - user:role:add
        - administrator
        - administrator
      options:
        yes: null
        root: ${joinup.site_dir}
    - task: exec
      command: ${drush.bin}
      arguments:
        - cas-mock-server:user-create
        - administrator
      options:
        email: administrator@example.com
        password: administrator
        yes: null
        root: ${joinup.site_dir}
    - task: exec
      command: ${drush.bin}
      arguments:
        - cas:set-cas-username
        - administrator
        - administrator
      options:
        yes: null
        root: ${joinup.site_dir}
    - task: exec
      command: ${drush.bin}
      arguments:
        - user:create
        - moderator
      options:
        mail: moderator@example.com
        password: moderator
        yes: null
        root: ${joinup.site_dir}
    - task: exec
      command: ${drush.bin}
      arguments:
        - user:role:add
        - moderator
        - moderator
      options:
        yes: null
        root: ${joinup.site_dir}
    - task: exec
      command: ${drush.bin}
      arguments:
        - cas-mock-server:user-create
        - moderator
      options:
        email: moderator@example.com
        password: moderator
        yes: null
        root: ${joinup.site_dir}
    - task: exec
      command: ${drush.bin}
      arguments:
        - cas:set-cas-username
        - moderator
        - moderator
      options:
        yes: null
        root: ${joinup.site_dir}
    - task: exec
      command: ${drush.bin}
      arguments:
        - user:create
        - user
      options:
        mail: user@example.com
        password: user
        yes: null
        root: ${joinup.site_dir}
    - task: exec
      command: ${drush.bin}
      arguments:
        - cas-mock-server:user-create
        - user
      options:
        email: user@example.com
        password: user
        yes: null
        root: ${joinup.site_dir}
    - task: exec
      command: ${drush.bin}
      arguments:
        - cas:set-cas-username
        - user
        - user
      options:
        yes: null
        root: ${joinup.site_dir}
    - task: run
      command: config-readonly:enable

  dev:import-sparql-fixtures:
    - task: run
      command: virtuoso:import-fixtures
      arguments:
        - resources/fixtures/actor.rdf
        - resources/fixtures/adms-definition.rdf
        - resources/fixtures/ADMS-SW-v1.00.rdf
        - resources/fixtures/ADMS_SKOS_v1.00.rdf
        - resources/fixtures/business-process.rdf
        - resources/fixtures/countries-skos.rdf
        - resources/fixtures/data-theme-skos.rdf
        - resources/fixtures/eif_conceptual_model.rdf
        - resources/fixtures/eif_interoperability_layer.rdf
        - resources/fixtures/eif_principle.rdf
        - resources/fixtures/eif_recommendation.rdf
        - resources/fixtures/EIRA_SKOS.rdf
        - resources/fixtures/filetypes-skos.rdf
        - resources/fixtures/languages-skos.rdf
        - resources/fixtures/licence-legal-type.rdf
        - resources/fixtures/product_type.rdf
        - resources/fixtures/solution_category.rdf
        - resources/fixtures/standardization_level.rdf
        - resources/fixtures/test_resource_type.rdf
    - task: run
      command: sparql:query
      arguments:
        # We get our languages from the Metadata Registry. The Metadata Registry
        # maintains two authority tables, one for individual languages and one
        # for groups of languages called multilingual. For legacy reasons the
        # two tables are published as a merger of the two. The multilingual
        # language groups are not useful for us and we need to filter them out
        # to avoid having the language lists polluted with entries labeled
        # 'Multilingual Code'.
        # See http://publications.europa.eu/mdr/resource//documentation/schema/cat.html#element_languages
        # See https://webgate.ec.europa.eu/CITnet/jira/browse/ISAICP-2764
        - DELETE FROM <http://languages-skos> { ?entity ?field ?value. } WHERE { ?entity ?field ?value . FILTER(str(?value) = "Multilingual Code") }
        # See ISAICP-3084
        - INSERT INTO <http://adms-sw-v1.00> { <http://purl.org/adms/licencetype/ViralEffect-ShareAlike>  <http://www.w3.org/2004/02/skos/core#inScheme> <http://purl.org/adms/licencetype/1.1> }
        # The licences are defined in both the adms-sw and the adms-skos files.
        # In adms-sw the version 1.1 is included while the adms-skos has the
        # version 1.0. As a bundle can have only one uri mapped, the 1.0 version
        # has to be removed.
        # See https://webgate.ec.europa.eu/CITnet/jira/browse/ISAICP-2503
        - DELETE FROM <http://adms_skos_v1.00> { ?entity ?field ?value. } WHERE { ?entity ?field ?value . ?entity <http://www.w3.org/2004/02/skos/core#inScheme> <http://purl.org/adms/licencetype/1.0>};
        # Remove any non english version of the taxonomy terms since we are only
        # supporting english version in the website. If more terms are needed,
        # the supported languages should be extended (the "en" below). This
        # needs to repeat multiple times as the terms might.
        - DELETE { GRAPH ?g { ?entity ?field ?value } } WHERE { GRAPH ?g { ?entity ?field ?value . FILTER (LANG(?value) != "" && LANG(?value) != "en") } };
        # See ISAICP-3216. Add the "Concept" type to all collection elements so
        # that they are listed as Parent terms.
        - WITH <http://eira_skos> INSERT { ?subject a skos:Concept } WHERE { ?subject a skos:Collection . };
        # Add the link to all "Concept" type elements so that they are all
        # considered as children of the EIRA vocabulary regardless of the depth.
        - WITH <http://eira_skos> INSERT INTO <http://eira_skos> { ?subject skos:topConceptOf <http://data.europa.eu/dr8> } WHERE { ?subject a skos:Concept .};
        # Create a backwards connection from the children to the parent.
        - WITH <http://eira_skos> INSERT { ?member skos:broaderTransitive ?collection } WHERE { ?collection a skos:Collection . ?collection skos:member ?member };
        # Remove deprecated countries from the country list. See ISAICP-3442.
        - WITH <http://countries-skos> DELETE { ?entity ?field ?value. } WHERE { ?entity ?field ?value . ?entity <http://publications.europa.eu/ontology/authority/end.use> ?date . FILTER ( bound(?date) ) };
        # Languages are required to be of type http://purl.org/dc/terms/Location
        # but are listed as http://www.w3.org/2004/02/skos/core#Concept which is
        # also correct. Add the entry:
        # { ?subject a <http://purl.org/dc/terms/Location> } for each language
        # in the <http://countries-skos> graph.
        # See https://webgate.ec.europa.eu/CITnet/jira/browse/ISAICP-4566
        - WITH <http://countries-skos> INSERT { ?entity <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://purl.org/dc/terms/Location> } WHERE { ?entity a <http://www.w3.org/2004/02/skos/core#Concept> };
        # As with the EIRA vocabulary, for elements of type skos:Collection, add
        # the skos:Concept as a type to the list so that the parent elements are
        # properly mapped to a bundle, and add the skos:broader for the
        # backwards connection from the child to the parent.
        - WITH <http://licence-legal-type> INSERT { ?subject a skos:Concept } WHERE { ?subject a skos:Collection . };
        - WITH <http://licence-legal-type> INSERT { ?subject skos:topConceptOf <http://joinup.eu/legal-type#> } WHERE { ?subject a skos:Concept . FILTER NOT EXISTS { ?subject skos:topConceptOf <http://joinup.eu/legal-type#> } };
        - WITH <http://licence-legal-type> INSERT { ?member skos:broaderTransitive ?collection } WHERE { ?collection a skos:Collection . ?collection skos:member ?member };
