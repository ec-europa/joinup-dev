# Drupal configuration
# --------------------

# The project name.
project.name = joinup

# The install profile to use.
website.profile.name = ${project.name}

# The site name.
website.site.name = Joinup

# The infrastructure stack.
infra.type = joinup

# The base URL. This is used for doing functional tests in Behat and PHPUnit.
drupal.base_url = http://localhost

# SQL database settings.
drupal.db.type = mysql
drupal.db.host = 127.0.0.1
drupal.db.port = 3306
drupal.db.name = ${project.name}
drupal.db.user =
drupal.db.password =
drupal.db.dsn = ${drupal.db.type}:host=${drupal.db.host};dbname=${drupal.db.name}
drupal.db.url = ${drupal.db.type}://${drupal.db.user}:${drupal.db.password}@${drupal.db.host}:${drupal.db.port}/${drupal.db.name}

# Admin user.
drupal.admin.username = admin
drupal.admin.password = admin
drupal.admin.email = admin@example.com

# SPARQL database settings.
sparql.host = ${env.SPARQL_HOST}
sparql.port = ${env.SPARQL_PORT}
sparql.dsn = ${env.SPARQL_HOST}
sparql.user = ${env.SPARQL_USER}
sparql.password = ${env.SPARQL_PASSWORD}
sparql.namespace = Drupal\\Driver\\Database\\joinup_sparql

# Comma-separated list of demo users to create. The username and password will
# be taken from the role. A normal authenticated user with username and password
# 'user' will also be created.
drupal.demo.users = administrator, moderator


# Paths
# -----

# Paths to executables.
composer.bin = ${project.basedir}/vendor/bin/composer
drush.bin = ${project.basedir}/vendor/bin/drush
phing.bin = ${project.basedir}/vendor/bin/phing
git.bin = /usr/bin/git
isql.bin = /usr/bin/isql-vt

# Files and directories inside the Drupal installation.
documentroot.path = web
website.drupal.dir = ${project.basedir}/${documentroot.path}
website.services.yml = ${website.settings.dir}/services.yml
website.settings.dir = ${website.sites.dir}/default
website.settings.php = ${website.settings.dir}/settings.php
website.settings.php.default = ${website.settings.dir}/default.settings.php
website.settings.local.php.example = ${website.sites.dir}/example.settings.local.php
website.settings.local.php = ${website.settings.dir}/settings.local.php
website.sites.dir = ${website.drupal.dir}/sites
website.services.yml.default = ${website.settings.dir}/default.services.yml
website.files.dir = ${website.settings.dir}/files
website.modules.dir = ${website.drupal.dir}/modules
website.profiles.dir = ${website.drupal.dir}/profiles
website.themes.dir = ${website.drupal.dir}/themes


# Composer related paths.
composer.json = ${project.basedir}/composer.json

# Temporary files.
tmp.dir = ${project.basedir}/tmp

# Exported configuration.
drupal.config.dir = ${project.basedir}/config/sync

# Drupal private files directory.
drupal.private_files.dir = ${project.basedir}/private


# Drush configuration
# -------------------

# The location of the Drush configuration folder.
drush.dir = ${project.basedir}/drush

# The location of the Drush configuration template.
drush.yml.template = ${drush.dir}/drush.yml.dist

# The location of the generated Drush configuration file.
drush.yml.path = ${drush.dir}/drush.yml

# Verbosity of Drush commands. Set to 'true' for verbose output.
drush.verbose = false


# Behat configuration
# -------------------

# The location of the Behat executable.
behat.bin = ${project.basedir}/vendor/bin/behat

# The location of the Behat tests.
behat.dir = ${project.basedir}/tests

# The location of the Behat configuration template.
behat.yml.template = ${behat.dir}/behat.yml.dist

# The location of the generated Behat configuration file.
behat.yml.path = ${behat.dir}/behat.yml

# The base URL to use in Behat tests.
behat.base_url = ${drupal.base_url}

# The browser to use for testing, either 'firefox' or 'chrome'.
behat.browser_name = chrome

# The port of the webdriver host (e.g. Selenium or PhantomJS).
behat.webdriver_port = 4444

# The URL of the webdriver host (e.g. Selenium or PhantomJS).
behat.webdriver_url = http://localhost:${behat.webdriver_port}/wd/hub

# The location to search for Behat subcontexts.
behat.subcontexts.path = ${website.modules.dir}

# The output format to use for Behat tests, either 'progress' or 'pretty'.
behat.formatter.name = progress

# The location of the test files.
behat.files.path = ${behat.dir}/fixtures/files
behat.webtools_geocoding.cache.path = ${behat.dir}/fixtures/webtools_geocoding_cache

# Enable strict mode in Behat tests. Will only pass if all tests are explicitly
# passing.
behat.options.strict = false

# Set verbosity for Behat tests. 0 is completely silent, 1 is normal output, 2
# shows exception backtraces, 3 shows debugging information.
behat.options.verbosity = 2

# The location where to save screenshots that are taken whenever a test fails.
# If left empty no screenshots will be taken.
# behat.screenshots.local.dir = ${tmp.dir}/behat-screenshots
behat.screenshots.local.dir =

# The location on AWS S3 where to upload screenshots that are taken whenever a
# test fails. This is especially helpful for storing screenshots taken during
# test runs on continuous integration services. The S3 bucket, key and secret
# to use are configured in the 'AWS S3' section below.
# If either this or any of the 'AWS S3' properties are left empty no screenshots
# will be uploaded to S3.
# behat.screenshots.s3.dir = behat-screenshots
behat.screenshots.s3.dir =


# PHP CodeSniffer configuration
# -----------------------------

# The file extensions to test.
phpcs.extensions = php inc module install info test profile theme css js

# The default configuration file to generate.
phpcs.config = ${project.basedir}/phpcs.xml

# The coding standard to use. If you want to customize the rules, make a copy of
# the file and name it 'phpcs-ruleset.xml'. Then copy this property to your
# build.properties file and remove the '.dist' suffix.
phpcs.standard = ${project.basedir}/phpcs-ruleset.xml.dist

# Paths to check, delimited by semicolons.
phpcs.files = ${website.modules.dir};${website.profiles.dir};${website.themes.dir}

# Whether or not to run a coding standards check before doing a git push. Note
# that this will abort the push if the coding standards check fails.
phpcs.prepush.enable = 1

# Paths to check, delimited by semicolons.
phpcs.files = ${website.modules.dir};${website.profiles.dir};${website.themes.dir};${behat.dir}/src;${project.basedir}/src

# Paths to ignore, delimited by semicolons.
phpcs.ignore = ${website.modules.dir}/contrib;${website.themes.dir}/joinup/prototype;${website.modules.dir}/custom/joinup_communities/tallinn/lib

# The report format. For example 'full', 'summary', 'diff', 'xml', 'json'.
phpcs.report = full

# Whether or not to show sniff codes in the report.
phpcs.sniffcodes = 0

# Whether or not to show the progress of the run.
phpcs.progress = 1

# The location of the file containing the global configuration options.
phpcs.global.config = ${project.basedir}/vendor/squizlabs/php_codesniffer/CodeSniffer.conf

# The source and destination paths of the git pre-push hook.
phpcs.prepush.source = ${project.basedir}/vendor/pfrenssen/phpcs-pre-push/pre-push
phpcs.prepush.destination = ${project.basedir}/.git/hooks/pre-push


# PHPUnit configuration
# ---------------------

# The path to the configuration file template.
phpunit.dist = ${project.basedir}/phpunit.xml.dist

# The path to the generated configuration file.
phpunit.config = ${project.basedir}/phpunit.xml

# The base URL to use in functional tests.
phpunit.base_url = ${drupal.base_url}

# The database URL to use in kernel tests and functional tests.
phpunit.db_url = ${drupal.db.url}

# The path to the directory where HTML output from browsertests is stored.
phpunit.browsertest_output_dir = ${website.sites.dir}/simpletest/browser_output

# The path to the file that lists HTML output from browsertests.
phpunit.browsertest_output_file = ${phpunit.browsertest_output_dir}/outputfile.txt

# The database URL for testing SPARQL queries.
phpunit.sparql_url = sparql://${sparql.host}:${sparql.port}/


# Apache Solr configuration
# -------------------------

# Solr core for published content.
solr.core.published.url = ${env.SOLR_CORE_PUBLISHED_URL}

# Solr core for unpublished content.
solr.core.unpublished.url = ${env.SOLR_CORE_UNPUBLISHED_URL}


# Development options
# -------------------

# Development modules to enable.
drupal.modules.dev = admin_toolbar cas_mock_server config_devel config_update devel field_ui filecache joinup_cas_mock_server views_ui

# Redirect outgoing e-mail to disk. This prevents e-mail from being
# accidentally sent out on development machines. The mails can be found in the
# folder temporary://devel-mails. This requires the devel module to be enabled.
drupal.redirect.email = yes


# AWS SDK
# -------
aws.profile = default
aws.region = eu-west-1


# AWS CodeDeploy
# --------------
deploy.serviceRole = arn:aws:iam::918396081007:role/CodeDeploy


# AWS S3
# ------

# The S3 bucket that contains the database dumps.
exports.s3.bucket = joinup2

# The key and secret to access the bucket. If left empty the credentials will
# be retrieved from the environment. For documentation on how to set the
# credentials on the environment, see \Aws\Credentials\CredentialProvider.
exports.s3.key =
exports.s3.secret =


# Packer configuration
# --------------------
packer.path = /usr/bin/env packer
packer.args =
application.name = ${project.name}


# Analytics configuration
# -----------------------

# Website ID. This can be seen in the Matomo UI, at Administration > Websites >
# Manage.
matomo.website_id = 1

# Optional HTTP URL to the Matomo server. Only intended for development
# environments.
matomo.url.http =

# Optional HTTPS URL to the Matomo server. Intended for production environments.
matomo.url.https =

# Authentication token. This can be retrieved from the Matomo web interface at
# Administration > Platform > API > User authentication.
matomo.token = 0123456789abcdef0123456789abcdef

# The site ID to use with Webtools Analytics.
webtools_analytics.site_id = ${matomo.website_id}

# The site path to use with Webtools Analytics. This defaults to the user
# acceptance environment so that we will not accidentally pollute our analytics
# data when running Joinup on an environment that doesn't properly override
# these properties.
webtools_analytics.site_path = joinup.uat.fpfis.tech.ec.europa.eu

# The Webtools Analytics server instance to use. This defaults to the test
# environment so that we will not accidentally pollute our analytics data when
# running Joinup on an environment that doesn't properly override these
# properties.
webtools_analytics.instance = testing


# Redis configuration
# -------------------

# The IP address of the Redis host.
# Uncomment this line to enable the Redis cache.
# redis.host = 127.0.0.1

# Config read-only
# ----------------

# Set this value to FALSE in `build.properties.local` to have config_readonly
# disabled on the development environment.
config_readonly.enabled = TRUE

# Drupal Test Traits (DTT) settings.
# ----------------------------------

dtt.base_url = ${drupal.base_url}
dtt.api_url = ${behat.webdriver_url}
dtt.mink_driver_args = ['chrome', null, 'http://localhost:4444/wd/hub']


# Sleep intervals. This is used by the 'sleep' target which is useful in certain
# circumstances. For instance in CI when we'll need a time for the services to
# get up and be ready to be used.
# -----------------------------------------------------------------------------

sleep.hours = 0
sleep.minutes = 0
sleep.seconds = 0
sleep.milliseconds = 0
