# Drupal configuration
# --------------------

# The project name.
project.name = joinup

# The install profile to use.
website.profile.name = ${project.name}

# The site name.
website.site.name = Joinup

# The infrastructure stack.
infra.type = joinup

# SQL database settings.
drupal.db.name = db_name
drupal.db.user = db_user
drupal.db.password = db_pass

# SPARQL database settings.
sparql.host = localhost
sparql.port = 8890
sparql.dsn = localhost
sparql.user = dba
sparql.password = dba
sparql.shareddirectory =

# Comma-separated list of demo users to create. The username and password will
# be taken from the role. A normal authenticated user with username and password
# 'user' will also be created.
drupal.demo.users = administrator, moderator


# Paths
# -----

# Paths to executables.
git.bin = /usr/bin/git
isql.bin = /usr/bin/isql-vt
solr.bin = ${project.basedir}/vendor/bin/solr

# Files and directories inside the Drupal installation.
documentroot.path = web
website.drupal.dir = ${project.basedir}/${documentroot.path}
website.services.yml = ${website.settings.dir}/services.yml

# Composer related paths.
composer.json = ${project.basedir}/composer.json

# Temporary files.
tmp.dir = ${project.basedir}/tmp


# Behat configuration
# -------------------

# Enable strict mode in Behat tests. Will only pass if all tests are explicitly
# passing.
behat.options.strict = false

# Set verbosity for Behat tests. 0 is completely silent, 1 is normal output, 2
# shows exception backtraces, 3 shows debugging information.
behat.options.verbosity = 2


# PHP CodeSniffer configuration
# -----------------------------

# Whether or not to run a coding standards check before doing a git push. Note
# that this will abort the push if the coding standards check fails.
phpcs.prepush.enable = 1

# Paths to check, delimited by semicolons.
phpcs.files = ${website.modules.dir};${website.profiles.dir};${website.themes.dir};${behat.dir}/src

# Paths to ignore, delimited by semicolons.
phpcs.ignore = ${website.modules.dir}/contrib;${website.themes.dir}/joinup/prototype


# PHPUnit configuration
# ---------------------

# Comma-separated list of test files to execute. These are relative to the
# Drupal root.
phpunit.files = ./modules/contrib/og/tests/src/Kernel/Entity/OgMembershipRoleReferenceTest.php

# The database URL for testing SPARQL queries.
phpunit.sparql_url = sparql://${sparql.host}:${sparql.port}/

# The name of the legacy database used for migration testing.
phpunit.migrate.legacy_db.name = d6_joinup_test

# The legacy database snapshot used for migration testing.
phpunit.migrate.legacy_site.db_dump = ./tmp/d6-joinup-test.sql

# The S3 location of the legacy database snapshot used for migration testing.
phpunit.migrate.legacy_db.s3.bucket = joinup2
phpunit.migrate.legacy_db.s3.object = joinupv2.0/dumps/d6-joinup-test.sql

# Apache Solr configuration
# -------------------------

# Apache Solr version to use.
solr.version = 6.6.0

# Filename of the download.
solr.tarball.filename = solr-${solr.version}.tgz

# Download URL.
solr.download.url = http://www-eu.apache.org/dist/lucene/solr/${solr.version}/${solr.tarball.filename}

# Installation path.
solr.vendor.dir = ${project.basedir}/vendor/apache
solr.dir = ${solr.vendor.dir}/solr-${solr.version}

# Search API configuration path.
solr.config.dir = ${website.modules.dir}/contrib/search_api_solr/solr-conf/6.x

# Names of the Solr cores for published and unpublished entities respectively.
# Node that the names of the solr instances are hardcoded in the corresponding yaml files.
# @see: search_api.server.solr_published.yml
# @see: search_api.server.solr_unpublished.yml
solr.core.published = drupal_published
solr.core.unpublished = drupal_unpublished

# The path to the data files of the Solr cores.
solr.core.published.dir = ${solr.dir}/server/solr/${solr.core.published}
solr.core.unpublished.dir = ${solr.dir}/server/solr/${solr.core.unpublished}


# Development options
# -------------------

# Development modules to enable.
drupal.modules.dev = admin_toolbar config_devel config_update field_ui menu_ui views_ui

# Modules to enable for doing user acceptance testing.
drupal.modules.uat = demo_users

# Redirect outgoing e-mail to disk. This prevents e-mail from being
# accidentally sent out on development machines. The mails can be found in the
# folder temporary://devel-mails. This requires the devel module to be enabled.
drupal.redirect.email = yes


# AWS SDK
# -------
aws.profile = default
aws.region = eu-west-1


# AWS CodeDeploy
# --------------
deploy.serviceRole = arn:aws:iam::918396081007:role/CodeDeploy


# Packer configuration
# --------------------
packer.path = /usr/bin/env packer
packer.args =
application.name = ${project.name}


# SASS compiler configuration
# ---------------------------

# The ruby sass executable.
sass.bin = sass

# The code style. Can be 'nested', 'compact', 'compressed' or 'expanded'.
sass.style = compressed

# The path to the SASS file to compile.
sass.input = ${website.themes.dir}/joinup/prototype/sass/app.sass

# The directory where the compiled CSS file should be placed.
sass.output.dir = ${website.themes.dir}/joinup/css

# The filename of the compiled CSS file.
sass.output.file = style.min.css


# Migration configuration
# -----------------------

# Main database settings.
migration.db.type = ${drupal.db.type}
migration.db.host = ${drupal.db.host}
migration.db.port = ${drupal.db.port}
migration.db.user = ${drupal.db.user}
migration.db.password = ${drupal.db.password}

# Migration specific database settings.
migration.db.name = db_name
migration.db.prefix =
migration.db.import_path = ./tmp/d6-joinup.sql

# Modules to enable.
migration.modules = joinup_migrate

# The web root of the D6 site.
migration.source.files = https://joinup.ec.europa.eu/sites/default/files

# How the migration will run: 'production' or 'test' mode.
migration.mode = production

# Uncomment the next line to run the migration during an acceptance build.
# migration.acceptance = 1


# Piwik configuration
# -------------------

# Installation path.
piwik.dir = ${project.basedir}/vendor/piwik/piwik

# Git repository.
piwik.repo = https://github.com/indiehosters/piwik.git
piwik.branch = master

# Configuration file.
piwik.config = docker-compose.yml

# Credentials.
piwik.db.password = ${drupal.db.password}

# Port to use. Piwik will be available on http://localhost:{port}
piwik.port = 8000

# Website ID. This can be seen in the Piwik UI, at Administration > Websites >
# Manage.
piwik.website_id = 1
