# Default environment variables for Joinup.
#
# Declaring sensitive data in environment variables is an industry standard, as
# it's a very friendly mechanism for configuring the applications on different
# environments and in continuous integration flows, as well. Depending on the
# development environment or developer practices, the system environment
# variables can be assigned in different ways, most simple is declaring them in
# the `~/.bashrc` or `~/.zshrc` files on Bash respectively Z shells. But some
# prefer to keep them inside the project's directory tree, as they are project
# specific variables. In order to do so, just copy the lines from this file that
# you want to override to an empty file named `.env` and fill in the sensitive
# values. Note that the `.env` file is not under VCS control and should not be
# committed.
#
# The defaults used in this file are designed to work out of the box with our
# Docker environment, to make it as easy as possible for a new contributor to
# start working on Joinup.
#
#
# Example settings for a local development environment
# ----------------------------------------------------
#
# For developers who wish to set up a local development environment which does
# not rely on Docker, here is a list of the variables which typically would need
# to be overridden in the `.env` file:
#
# DRUPAL_BASE_URL=http://localhost:8080 # or maybe http://joinup.local
#
# DRUPAL_DATABASE_HOST=localhost
# DRUPAL_DATABASE_USERNAME=my_db_user
# DRUPAL_DATABASE_PASSWORD=my_db_password
# DRUPAL_HASH_SALT=my_random_40_character_long_hash_salt
#
# SPARQL_HOST=localhost
#
# SOLR_CORE_PUBLISHED_URL=http://localhost:8983/solr
# SOLR_CORE_UNPUBLISHED_URL=http://localhost:8983/solr
#
# REDIS_HOST=localhost
#
# WEBDRIVER_URL=http://localhost:4444/wd/hub
# SIMPLETEST_BASE_URL=http://localhost:8080 # or maybe http://joinup.local
# SIMPLETEST_DB=mysql://my_db_user@localhost:3306/joinup
# SIMPLETEST_SPARQL_DB=sparql://localhost:8890?module=sparql_entity_storage
# MINK_DRIVER_ARGS_WEBDRIVER="['chrome', { 'chromeOptions': { 'w3c': false } }, 'http://localhost:4444/wd/hub']"
# DTT_BASE_URL=http://localhost:8080 # or maybe http://joinup.local
# DTT_API_URL=http://localhost:4444/wd/hub
# DTT_MINK_DRIVER_ARGS="['chrome', null, 'http://localhost:4444/wd/hub']"


# Drupal settings.

DRUPAL_BASE_URL=http://web:8080/web
# The hash salt is required and needs to be present in the environment or .env.
# Generate a random hash salt with the following command:
# cat /dev/urandom | LC_ALL=C tr -dc 'a-zA-Z0-9+/' | fold -w ${1:-55} | head -n 1
DRUPAL_HASH_SALT=
# Always relative to Drupal webroot.
DRUPAL_PRIVATE_FILE_SYSTEM=../private
# Absolute or relative to project root.
DRUPAL_FILE_TEMP_PATH=./tmp
DRUPAL_SYSTEM_LOG_ERROR_LEVEL=verbose
DRUPAL_SITE_PROFILE=joinup
DRUPAL_SITE_NAME=Joinup
DRUPAL_SITE_MAIL=joinup@example.com
DRUPAL_ACCOUNT_NAME=admin
DRUPAL_ACCOUNT_PASSWORD=admin

# Drupal MySQL connection.
DRUPAL_DATABASE_HOST=mysql
DRUPAL_DATABASE_PORT=3306
DRUPAL_DATABASE_USERNAME=root
DRUPAL_DATABASE_PASSWORD=
DRUPAL_DATABASE_NAME=drupal

# SPARQL connection.
SPARQL_HOST=sparql
SPARQL_PORT=8890
SPARQL_USER=dba
SPARQL_PASSWORD=dba
SPARQL_PUBLIC_ENDPOINT=https://joinup.ec.europa.eu/sparql/

# Apache Solr endpoint.
SOLR_CORE=digit-joinup
SOLR_URL=http://solr:8983/solr

# Redis.
REDIS_INTERFACE=Predis
REDIS_HOST=redis
REDIS_PORT=6379
REDIS_PASSWORD=

# Drush.
DRUSH_VERBOSE=no

# Matomo & OpenEuropa Webtools Analytics.
MATOMO_SITE_ID=1
MATOMO_SITE_URL_HTTP=
MATOMO_SITE_URL_HTTPS=
MATOMO_REPORTING_API_AUTH_TOKEN=0123456789abcdef0123456789abcdef
OE_WEBTOOLS_ANALYTICS_SITE_PATH=joinup.uat.fpfis.tech.ec.europa.eu
OE_WEBTOOLS_ANALYTICS_SITE_INSTANCE=testing

# ASDA connection. This is used to retrieve backups of production data. These
# credentials are only handed out on a need-to-know basis by project management.
ASDA_URL=
ASDA_USER=
ASDA_PASSWORD=

# Artifacts dir, used to store test artifacts. Either absolute or relative to
# the webroot directory. Configure it in .env file. E.g.:
# ARTIFACTS_DIR="${DRUPAL_FILE_TEMP_PATH}"

# Testing webdriver.
WEBDRIVER_URL=http://selenium:4444/wd/hub

# Behat artefacts settings.
BEHAT_S3_DIR=
BEHAT_S3_AWS_REGION=
BEHAT_S3_BUCKET=
AWS_ACCESS_KEY_ID=
AWS_SECRET_ACCESS_KEY=

# PHPUnit configuration. These environment variables are documented in the
# configuration file (./phpunit.xml).
SIMPLETEST_BASE_URL=http://web:8080/web
SIMPLETEST_DB=mysql://root@mysql:3306/drupal
SIMPLETEST_SPARQL_DB=sparql://sparql:8890?module=sparql_entity_storage
BROWSERTEST_OUTPUT_DIRECTORY=./web/sites/simpletest/browser_output
BROWSERTEST_OUTPUT_BASE_URL=
SYMFONY_DEPRECATIONS_HELPER=99999
MINK_DRIVER_CLASS=
MINK_DRIVER_ARGS=
MINK_DRIVER_ARGS_PHANTOMJS=
MINK_DRIVER_ARGS_WEBDRIVER="[\"chrome\", { \"chromeOptions\": { \"w3c\": false } }, \"http://selenium:4444/wd/hub\"]"
DTT_BASE_URL=http://web:8080/web
DTT_API_URL=http://selenium:4444/wd/hub
DTT_MINK_DRIVER_ARGS="['chrome', null, 'http://selenium:4444/wd/hub']"

# This environment variable is used as a switch to wake up the containers with
# empty databases (value 'no') or with databases importing data from production.
# Copy this line in .env file and set 'yes' as value if you want to restore the
# production databases.
DOCKER_RESTORE_PRODUCTION=no

# Copy this variable in .env file and set the value to "True" in order to start
# the Docker web service with XDebug disabled. Note that you can anytime enable
# XDebug manually by issuing:
# $ docker-compose exec web phpenmod xdebug
# or disable it with:
# $ docker-compose exec web phpdismod xdebug
DISABLE_XDEBUG="False"

# Debugging
# TODO: The following vars were not tested. They were inherited from a previous
# Docker setup. To investigate if we still need them.
#
# XDebug configuration. For Xdebug setup, run this command in the terminal:
# - macOS users: sudo ifconfig en0 alias 10.254.254.254 255.255.255.0
# - Linux users: sudo ip addr add 10.254.254.254/32 dev lo label lo:1
# XDEBUG_CONFIG="remote_enable=1 remote_host=10.254.254.254 remote_port=9000 idekey=PHPSTORM remote_autostart=1"
# PHP_IDE_CONFIG="serverName=Docker"
