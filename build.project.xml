<?xml version="1.0" encoding="UTF-8" ?>

<project name="Joinup" default="help">

    <!-- Import Phing targets related to the D6 migration. -->
    <import file="${project.basedir}/build.migration.xml" optional="true" />

    <!-- Import Phing targets related to ContinuousPHP. -->
    <import file="${project.basedir}/build.continuousphp.xml" optional="true" />

    <!-- Import Phing targets related to Apache Solr. -->
    <import file="${project.basedir}/build.solr.xml" optional="true" />

    <!-- Import Phing targets related to Piwik. -->
    <import file="${project.basedir}/build.piwik.xml" optional="true" />

    <!-- Import Phing targets related to Redis cache. -->
    <import file="${project.basedir}/build.redis.xml" optional="true" />

    <echo msg="Loading Behat task." />
    <taskdef name="behat" classname="BehatTask" />

    <echo msg="Loading Remove Patched Packages task." />
    <taskdef name="removepatchedpackages" classname="\DrupalProject\Phing\RemovePatchedPackagesTask" />

    <echo msg="Loading Virtuoso Sparql Permissions task." />
    <taskdef name="setvirtuososparqlpermissions" classname="\DrupalProject\Phing\SetVirtuosoSparqlPermissions" />

    <echo msg="Loading Import RDF fixtures task." />
    <taskdef name="importrdffixtures" classname="\DrupalProject\Phing\ImportRdfFixtures" />

    <echo msg="Loading After Import RDF fixtures task." />
    <taskdef name="afterrdffixturesimport" classname="\DrupalProject\Phing\AfterFixturesImportCleanup" />

    <echo msg="Loading Purge RDF Backend task." />
    <taskdef name="rdfpurge" classname="\DrupalProject\Phing\RdfPurge" />

    <echo msg="Setting-up MySQL auto-increment values for {comment}, {file_managed}, {node} and {users}." />
    <taskdef name="setmysqlautoincrement" classname="\DrupalProject\Phing\SetMysqlAutoincrement" />

    <!-- Install the website. -->
    <target name="install" depends="writable-settings-folder, writable-settings-php, disable-config-read-only">
        <drush
            command="site-install"
            assume="yes"
            root="${website.drupal.dir}"
            bin="${drush.bin}"
            verbose="${drush.verbose}">
            <option name="db-url" value="${drupal.db.url}" />
            <option name="site-name" value="${website.site.name}" />
            <option name="account-name" value="${drupal.admin.username}" />
            <option name="account-pass" value="${drupal.admin.password}" />
            <option name="account-mail" value="${drupal.admin.email}" />
            <param>${website.profile.name}</param>
            <!-- Disable sending of e-mails during installation. -->
            <param>install_configure_form.enable_update_status_module=NULL</param>
            <param>install_configure_form.enable_update_status_emails='NULL'</param>
            <param>install_settings_form.sparql.host=${sparql.host}</param>
            <param>install_settings_form.sparql.port=${sparql.port}</param>
        </drush>
        <!-- Set the auto-increment default values for some tables. -->
        <setmysqlautoincrement />
        <phingcall target="writable-settings-folder" />
        <phingcall target="writable-settings-php" />
        <append destFile="${website.settings.php}" text="${website.transactions}${line.separator}" />

        <!-- Make sure persistent session cookies are disabled. -->
        <phingcall target="disable-persistent-session-cookies" />
    </target>

    <target name="setup-virtuoso-permissions">
        <setvirtuososparqlpermissions
            IsqlPath="${isql.bin}"
            DataSourceName="${sparql.dsn}"
            Username="${sparql.user}"
            Password="${sparql.password}" />
    </target>

    <target name="purge-rdf-backend">
        <rdfpurge
            IsqlPath="${isql.bin}"
            DataSourceName="${sparql.dsn}"
            Username="${sparql.user}"
            Password="${sparql.password}"
            SolrUrl="${solr.server.url}"
            SolrCores="${solr.cores}" />
    </target>

    <target name="import-rdf-fixtures">
        <importrdffixtures
            IsqlPath="${isql.bin}"
            DataSourceName="${sparql.dsn}"
            Username="${sparql.user}"
            Password="${sparql.password}"
            SharedDirectory="${sparql.shareddirectory}" />

        <afterrdffixturesimport
            IsqlPath="${isql.bin}"
            DataSourceName="${sparql.dsn}"
            Username="${sparql.user}"
            Password="${sparql.password}" />
    </target>

    <!-- Set up PHPUnit. -->
    <target name="setup-phpunit" description="Generate the configuration file for PHPUnit.">
        <if>
            <available file="${phpunit.config}" type="file" property="phpunit.config.available" />
            <then>
                <echo message="Deleting existing PHPUnit configuration file." />
                <delete file="${phpunit.config}" failonerror="false" />
            </then>
        </if>
        <phpunitconfiguration
                configFile="${phpunit.config}"
                distFile="${phpunit.dist}"
                files="${phpunit.files}"
                directories="${phpunit.directories}"
                testsuiteName="${phpunit.testsuite.name}"
                baseUrl="${phpunit.base_url}"
                dbUrl="${phpunit.db_url}"
                sparqlUrl="${phpunit.sparql_url}"
                legacyDbUrl="${drupal.db.type}://${drupal.db.user}:${drupal.db.password}@${drupal.db.host}:${drupal.db.port}/${phpunit.migrate.legacy_db.name}"
                browsertestOutputDirectory="${phpunit.browsertest_output_dir}"
                browsertestOutputFile="${phpunit.browsertest_output_file}" />

        <!-- Create the directory and file for browsertest output. -->
        <mkdir dir="${phpunit.browsertest_output_dir}" />
        <touch file="${phpunit.browsertest_output_file}" />
    </target>

    <!-- Enable modules for user acceptance testing. These are different from the
      ones in enable-dev-modules as it can contain modules not needed for development
      like demo content modules. -->
    <target name="enable-uat-modules">
        <drush
                command="pm-enable"
                assume="yes"
                root="${website.drupal.dir}"
                bin="${drush.bin}"
                verbose="${drush.verbose}">
            <param>${drupal.modules.uat}</param>
        </drush>
    </target>

    <target name="purge-rdf-content">
        <drush
            command="rdf-entity-purge"
            assume="yes"
            root="${website.drupal.dir}"
            bin="${drush.bin}"
            verbose="${drush.verbose}">
        </drush>
    </target>

    <target name="clear-cache">
        <drush
                command="cr"
                assume="yes"
                root="${website.drupal.dir}"
                bin="${drush.bin}"
                verbose="${drush.verbose}">
        </drush>
    </target>

    <!-- Compile SASS to CSS. -->
    <target name="compile-sass"
            description="Compile the SASS to CSS.">
        <!-- Make sure the CSS directory exists. -->
        <mkdir dir="${sass.output.dir}" />
        <sass
            executable="${sass.bin}"
            style="${sass.style}"
            input="${sass.input}"
            output="${sass.output.dir}/${sass.output.file}" />
    </target>

    <!-- Disable persistent session cookies, this is necessary for the "Remember
      me" option at user log in. -->
    <target name="disable-persistent-session-cookies">
        <phingcall target="writable-settings-folder" />
        <phingcall target="writable-services-yml" />
        <reflexive>
            <fileset dir="${website.settings.dir}">
                <include pattern="services.yml" />
            </fileset>
            <filterchain>
                <replaceregexp>
                    <regexp
                        pattern="(cookie_lifetime: )\d+(0$)"
                        replace="\1\2"
                        modifiers="m" />
                </replaceregexp>
            </filterchain>
        </reflexive>
    </target>

    <!-- Export complete site configuration. -->
    <target name="export-config">
        <!-- Make sure the config directory exists. -->
        <mkdir dir="${drupal.config.dir}" />
        <drush
            command="config-export"
            assume="yes"
            root="${website.drupal.dir}"
            bin="${drush.bin}"
            verbose="${drush.verbose}">
            <option name="destination" value="${drupal.config.dir}" />
        </drush>
    </target>

    <target
        name="enable-config-read-only"
        depends="writable-settings-folder, writable-settings-php"
        description="Make config read-only.">
        <phingcall target="enable-module">
            <property name="module" value="config_readonly" />
        </phingcall>
        <append destFile="${website.settings.php}" text="$settings['config_readonly'] = TRUE;${line.separator}" />
    </target>

    <target
        name="disable-config-read-only"
        depends="writable-settings-folder, writable-settings-php"
        description="Make config writable.">
        <if>
            <available file="${website.settings.php}" type="file" property="settings.php.available" />
            <then>
                <reflexive>
                    <fileset dir="${website.settings.dir}">
                        <include pattern="settings.php" />
                    </fileset>
                    <filterchain>
                        <replaceregexp>
                            <regexp
                                pattern="^\$settings\['config_readonly'\].*$\n"
                                replace=""
                                modifiers="m" />
                        </replaceregexp>
                    </filterchain>
                </reflexive>
            </then>
        </if>
    </target>

    <target
        name="build-dist"
        description="Build a distribution package."
        depends="install-composer-dependencies-dist, compile-sass" />

    <target
        name="build-dev"
        description="Build a development environment."
        depends="install-composer-dependencies, setup-behat, setup-php-codesniffer, setup-phpunit, compile-sass" />

    <target
        name="setup-acceptance"
        description="Set up an acceptance environment."
        depends="create-demo-users, setup-virtuoso-permissions, purge-rdf-content, import-rdf-fixtures, enable-uat-modules, enable-dev-settings, configure-apache-solr-drupal, acceptance-migration, configure-piwik-drupal, clear-cache" />

    <target
        name="install-dev"
        description="Install the website and set up the development environment."
        depends="setup-virtuoso-permissions, purge-rdf-backend, clean-redis-settings, install, setup-redis, import-rdf-fixtures, setup-dev, configure-apache-solr-drupal, configure-piwik-drupal, create-demo-users" />

</project>
